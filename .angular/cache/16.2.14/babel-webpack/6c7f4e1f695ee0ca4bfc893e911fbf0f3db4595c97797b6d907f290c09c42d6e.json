{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction IngredientListFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\")(2, \"label\", 14);\n    i0.ɵɵtext(3, \"Ingredient Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\")(6, \"label\", 16);\n    i0.ɵɵtext(7, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function IngredientListFormComponent_div_18_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeIngredient(i_r2));\n    });\n    i0.ɵɵtext(10, \"Remove Ingredient\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n  }\n}\nexport class IngredientListFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.dishForm = FormGroup;\n    this.dishForm = this.fb.group({\n      id: [null, Validators.required],\n      time: [null, Validators.required],\n      difficulty: [null, Validators.required],\n      rating: [null, Validators.required],\n      title: ['', Validators.required],\n      ingredientLists: this.fb.array([this.createIngredientFormGroup()])\n    });\n  }\n  createIngredientFormGroup() {\n    return this.fb.group({\n      ingredientName: ['', Validators.required],\n      quantity: [null, Validators.required]\n    });\n  }\n  addIngredient() {\n    this.dishForm.get('ingredientLists').push(this.createIngredientFormGroup());\n  }\n  removeIngredient(index) {\n    this.dishForm.get('ingredientLists').removeAt(index);\n  }\n  onSubmit() {\n    if (this.dishForm.valid) {\n      const dish = {\n        id: this.dishForm.value.id,\n        time: this.dishForm.value.time,\n        id: this.dishForm.value.id,\n        id: this.dishForm.value.id,\n        id: this.dishForm.value.id,\n        id: [null, Validators.required],\n        time: [null, Validators.required],\n        difficulty: [null, Validators.required],\n        rating: [null, Validators.required],\n        title: ['', Validators.required],\n        ingredientLists: this.fb.array([this.createIngredientFormGroup()])\n      };\n      this.ingredientService.addIngredient(dish).subscribe(() => {\n        console.log('Ingredient added successfully');\n      });\n    }\n  }\n  static #_ = this.ɵfac = function IngredientListFormComponent_Factory(t) {\n    return new (t || IngredientListFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IngredientListFormComponent,\n    selectors: [[\"app-ingredient-list-form\"]],\n    decls: 23,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"id\", \"title\", \"formControlName\", \"title\"], [\"for\", \"time\"], [\"id\", \"time\", \"formControlName\", \"time\"], [\"for\", \"difficulty\"], [\"id\", \"difficulty\", \"formControlName\", \"difficulty\"], [\"for\", \"rating\"], [\"id\", \"rating\", \"formControlName\", \"rating\"], [\"formArrayName\", \"ingredientLists\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\"], [3, \"formGroupName\"], [\"for\", \"ingredientName\"], [\"id\", \"ingredientName\", \"formControlName\", \"ingredientName\"], [\"for\", \"quantity\"], [\"id\", \"quantity\", \"formControlName\", \"quantity\", \"type\", \"number\"]],\n    template: function IngredientListFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function IngredientListFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Dish Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Difficulty\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 7);\n        i0.ɵɵtext(15, \"Rating\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 9);\n        i0.ɵɵtemplate(18, IngredientListFormComponent_div_18_Template, 11, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function IngredientListFormComponent_Template_button_click_19_listener() {\n          return ctx.addIngredient();\n        });\n        i0.ɵɵtext(20, \"Add Ingredient\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 12);\n        i0.ɵɵtext(22, \"Save Dish\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.dishForm);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dishForm.get(\"ingredientLists\").controls);\n      }\n    },\n    dependencies: [i2.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","IngredientListFormComponent_div_18_Template_button_click_9_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","removeIngredient","ɵɵproperty","IngredientListFormComponent","constructor","fb","dishForm","group","id","required","time","difficulty","rating","title","ingredientLists","array","createIngredientFormGroup","ingredientName","quantity","addIngredient","get","push","removeAt","onSubmit","valid","dish","value","ingredientService","subscribe","console","log","_","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","IngredientListFormComponent_Template","rf","ctx","IngredientListFormComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","IngredientListFormComponent_div_18_Template","IngredientListFormComponent_Template_button_click_19_listener","ɵɵadvance","controls"],"sources":["C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-list-form\\ingredient-list-form.component.ts","C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-list-form\\ingredient-list-form.component.html"],"sourcesContent":["import { DishService } from './../../service/dish.service';\nimport { Dish } from './../../models/dish';\nimport { IngredientListService } from './../../service/ingredient-list.service';\nimport { Component } from '@angular/core';\nimport { IngredientList } from 'src/app/models/ingredient-list';\nimport { FormArray, FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-ingredient-list-form',\n  templateUrl: './ingredient-list-form.component.html',\n  styleUrls: ['./ingredient-list-form.component.css']\n})\nexport class IngredientListFormComponent {\n\ndishForm = FormGroup;\n\nconstructor(private fb: FormBuilder) {\n  this.dishForm = this.fb.group({\n    id: [null, Validators.required],\n    time: [null, Validators.required],\n    difficulty: [null, Validators.required],\n    rating: [null, Validators.required],\n    title: ['', Validators.required],\n    ingredientLists: this.fb.array([\n      this.createIngredientFormGroup() \n    ])\n  });\n}\n\ncreateIngredientFormGroup(): FormGroup {\n  return this.fb.group({\n    ingredientName: ['', Validators.required],\n    quantity: [null, Validators.required]\n  });\n}\n\naddIngredient(): void {\n  (this.dishForm.get('ingredientLists') as FormArray).push(this.createIngredientFormGroup());\n}\n\n\nremoveIngredient(index: number): void {\n  (this.dishForm.get('ingredientLists') as FormArray).removeAt(index);\n}\n\n\nonSubmit() {\n  if (this.dishForm.valid) {\n\n      const dish: Dish = {\n        id: this.dishForm.value.id!\n        time: this.dishForm.value.time!\n        id: this.dishForm.value.id!\n        id: this.dishForm.value.id!\n        id: this.dishForm.value.id!\n        id: [null, Validators.required],\n        time: [null, Validators.required],\n        difficulty: [null, Validators.required],\n        rating: [null, Validators.required],\n        title: ['', Validators.required],\n        ingredientLists: this.fb.array([\n          this.createIngredientFormGroup() \n        ])\n      };\n      this.ingredientService.addIngredient(dish).subscribe(() => {\n        console.log('Ingredient added successfully');\n      });\n \n  }\n}\n\n}\n","<form [formGroup]=\"dishForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"title\">Dish Title</label>\n      <input id=\"title\" formControlName=\"title\" />\n    </div>\n  \n    <div>\n      <label for=\"time\">Time</label>\n      <input id=\"time\" formControlName=\"time\" />\n    </div>\n  \n    <div>\n      <label for=\"difficulty\">Difficulty</label>\n      <input id=\"difficulty\" formControlName=\"difficulty\" />\n    </div>\n  \n    <div>\n      <label for=\"rating\">Rating</label>\n      <input id=\"rating\" formControlName=\"rating\" />\n    </div>\n  \n    <div formArrayName=\"ingredientLists\">\n      <div *ngFor=\"let ingredientCtrl of dishForm.get('ingredientLists').controls; let i = index\" [formGroupName]=\"i\">\n        <div>\n          <label for=\"ingredientName\">Ingredient Name</label>\n          <input id=\"ingredientName\" formControlName=\"ingredientName\" />\n        </div>\n  \n        <div>\n          <label for=\"quantity\">Quantity</label>\n          <input id=\"quantity\" formControlName=\"quantity\" type=\"number\" />\n        </div>\n  \n        <button type=\"button\" (click)=\"removeIngredient(i)\">Remove Ingredient</button>\n      </div>\n    </div>\n  \n    <button type=\"button\" (click)=\"addIngredient()\">Add Ingredient</button>\n    <button type=\"submit\">Save Dish</button>\n  </form>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}