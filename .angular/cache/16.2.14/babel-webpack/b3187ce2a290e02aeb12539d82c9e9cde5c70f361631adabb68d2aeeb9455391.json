{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/ingredient.service\";\nimport * as i2 from \"@angular/forms\";\nexport class IngredientListFormComponent {\n  constructor(ingredientService, fb) {\n    this.ingredientService = ingredientService;\n    this.fb = fb;\n    this.ingredientListForm = new FormGroup();\n    this.ingredientsForm = new FormGroup({\n      name: new FormControl('')\n    });\n  }\n  ngOnInit() {\n    this.ingredientListForm = this.fb.group({\n      items: this.fb.array([])\n    });\n  }\n  static #_ = this.ɵfac = function IngredientListFormComponent_Factory(t) {\n    return new (t || IngredientListFormComponent)(i0.ɵɵdirectiveInject(i1.IngredientService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IngredientListFormComponent,\n    selectors: [[\"app-ingredient-list-form\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[3, \"formGroup\"]],\n    template: function IngredientListFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"ingredient-list-form works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"form\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.ingredientListForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","IngredientListFormComponent","constructor","ingredientService","fb","ingredientListForm","ingredientsForm","name","FormControl","ngOnInit","group","items","array","_","i0","ɵɵdirectiveInject","i1","IngredientService","i2","FormBuilder","_2","selectors","decls","vars","consts","template","IngredientListFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-list-form\\ingredient-list-form.component.ts","C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-list-form\\ingredient-list-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { IngredientList } from 'src/app/models/ingredient-list';\nimport { FormArray, FormGroup, FormBuilder } from '@angular/forms';\nimport { IngredientService } from 'src/app/service/ingredient.service';\n\n@Component({\n  selector: 'app-ingredient-list-form',\n  templateUrl: './ingredient-list-form.component.html',\n  styleUrls: ['./ingredient-list-form.component.css']\n})\nexport class IngredientListFormComponent {\n  ingredientListForm = new FormGroup \n  ingredientsForm = new FormGroup({\n    name: new FormControl(''),\n  });\n  constructor( private ingredientService: IngredientService, private fb: FormBuilder) {}\nngOnInit(): void {\n  this.ingredientListForm= this.fb.group({\n    items: this.fb.array([]) \n  });\n}\n\n}\n","<p>ingredient-list-form works!</p>\n\n<form [formGroup]=\"ingredientListForm\">\n    <!-- Form controls go here -->\n  </form>\n"],"mappings":"AAEA,SAAoBA,SAAS,QAAqB,gBAAgB;;;;AAQlE,OAAM,MAAOC,2BAA2B;EAKtCC,YAAqBC,iBAAoC,EAAUC,EAAe;IAA7D,KAAAD,iBAAiB,GAAjBA,iBAAiB;IAA6B,KAAAC,EAAE,GAAFA,EAAE;IAJrE,KAAAC,kBAAkB,GAAG,IAAIL,SAAS,CAAT,CAAS;IAClC,KAAAM,eAAe,GAAG,IAAIN,SAAS,CAAC;MAC9BO,IAAI,EAAE,IAAIC,WAAW,CAAC,EAAE;KACzB,CAAC;EACmF;EACvFC,QAAQA,CAAA;IACN,IAAI,CAACJ,kBAAkB,GAAE,IAAI,CAACD,EAAE,CAACM,KAAK,CAAC;MACrCC,KAAK,EAAE,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC,EAAE;KACxB,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAVYZ,2BAA2B,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA3BnB,2BAA2B;IAAAoB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVxCb,EAAA,CAAAe,cAAA,QAAG;QAAAf,EAAA,CAAAgB,MAAA,kCAA2B;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QAElCjB,EAAA,CAAAkB,SAAA,cAES;;;QAFHlB,EAAA,CAAAmB,SAAA,GAAgC;QAAhCnB,EAAA,CAAAoB,UAAA,cAAAN,GAAA,CAAAvB,kBAAA,CAAgC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}