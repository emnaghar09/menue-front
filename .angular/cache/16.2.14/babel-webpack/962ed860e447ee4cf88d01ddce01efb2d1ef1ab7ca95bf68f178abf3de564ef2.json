{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nexport let IngredientFormComponent = class IngredientFormComponent {\n  constructor(ingredientService, priv) {\n    this.ingredientService = ingredientService;\n    this.ingredientsForm = new FormGroup({\n      name: new FormControl('')\n    });\n  }\n  onSubmit() {\n    if (this.ingredientsForm.valid) {\n      const ingredient = {\n        name: this.ingredientsForm.value.name\n      };\n      this.ingredientService.addIngredient(ingredient).subscribe(() => {\n        console.log('Ingredient added successfully');\n      });\n    }\n  }\n};\nIngredientFormComponent = __decorate([Component({\n  selector: 'app-ingredient-form',\n  templateUrl: './ingredient-form.component.html',\n  styleUrls: ['./ingredient-form.component.css']\n})], IngredientFormComponent);","map":{"version":3,"names":["Component","FormGroup","FormControl","IngredientFormComponent","constructor","ingredientService","priv","ingredientsForm","name","onSubmit","valid","ingredient","value","addIngredient","subscribe","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-form\\ingredient-form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IngredientService } from 'src/app/service/ingredient.service';\nimport { Ingredient } from 'src/app/models/ingredient';\n\n@Component({\n  selector: 'app-ingredient-form',\n  templateUrl: './ingredient-form.component.html',\n  styleUrls: ['./ingredient-form.component.css'],\n})\n\nexport class IngredientFormComponent {\ningredientsForm = new FormGroup({\n  name: new FormControl(''),\n});\n\nconstructor (private ingredientService: IngredientService, priv){\n  \n}\n\nonSubmit() {\n  if (this.ingredientsForm.valid) {\n    const ingredient: Ingredient = {\n      name: this.ingredientsForm.value.name!\n    };\n    this.ingredientService.addIngredient(ingredient).subscribe(() => {\n      console.log('Ingredient added successfully');\n    });\n}\n}\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,SAAS,EAAEC,WAAW,QAAoB,gBAAgB;AAWzE,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAKpCC,YAAqBC,iBAAoC,EAAEC,IAAI;IAA1C,KAAAD,iBAAiB,GAAjBA,iBAAiB;IAJtC,KAAAE,eAAe,GAAG,IAAIN,SAAS,CAAC;MAC9BO,IAAI,EAAE,IAAIN,WAAW,CAAC,EAAE;KACzB,CAAC;EAIF;EAEAO,QAAQA,CAAA;IACN,IAAI,IAAI,CAACF,eAAe,CAACG,KAAK,EAAE;MAC9B,MAAMC,UAAU,GAAe;QAC7BH,IAAI,EAAE,IAAI,CAACD,eAAe,CAACK,KAAK,CAACJ;OAClC;MACD,IAAI,CAACH,iBAAiB,CAACQ,aAAa,CAACF,UAAU,CAAC,CAACG,SAAS,CAAC,MAAK;QAC9DC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC9C,CAAC,CAAC;;EAEN;CACC;AAnBYb,uBAAuB,GAAAc,UAAA,EANnCjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EAEWjB,uBAAuB,CAmBnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}