{"ast":null,"code":"import { FormArray, FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../service/ingredient-list.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./../../service/dish.service\";\nimport * as i4 from \"@angular/common\";\nfunction IngredientListFormComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7)(2, \"label\", 8);\n    i0.ɵɵtext(3, \"Ingredient Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 9);\n    i0.ɵɵelementStart(5, \"label\", 10);\n    i0.ɵɵtext(6, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 11);\n    i0.ɵɵelementStart(8, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function IngredientListFormComponent_div_7_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.removeIngredientList(i_r2));\n    });\n    i0.ɵɵtext(9, \"Remove Ingredient\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n  }\n}\nexport class IngredientListFormComponent {\n  constructor(ingredientListService, fb, dishService) {\n    this.ingredientListService = ingredientListService;\n    this.fb = fb;\n    this.dishService = dishService;\n    // dishForm = FormGroup;\n    this.dishForm = new FormGroup({\n      id: new FormControl(null, Validators.required),\n      time: new FormControl(null, Validators.required),\n      difficulty: new FormControl(null, Validators.required),\n      rating: new FormControl(null, Validators.required),\n      title: new FormControl('', Validators.required),\n      ingredientLists: new FormArray([new FormControl(null, Validators.required)])\n    });\n    // this.dishForm = this.fb.group({\n    //   title: [''],\n    //   ingredientLists: this.fb.array([])\n    // });\n  }\n\n  ngOnInit() {}\n  get ingredientLists() {\n    return this.dishForm.get('ingredientLists');\n  }\n  static #_ = this.ɵfac = function IngredientListFormComponent_Factory(t) {\n    return new (t || IngredientListFormComponent)(i0.ɵɵdirectiveInject(i1.IngredientListService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.DishService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IngredientListFormComponent,\n    selectors: [[\"app-ingredient-list-form\"]],\n    decls: 12,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"title\"], [\"id\", \"title\", \"formControlName\", \"title\"], [\"formArrayName\", \"ingredientLists\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\"], [3, \"formGroupName\"], [\"for\", \"ingredientName\"], [\"id\", \"ingredientName\", \"formControlName\", \"ingredientName\"], [\"for\", \"quantity\"], [\"id\", \"quantity\", \"formControlName\", \"quantity\", \"type\", \"number\"]],\n    template: function IngredientListFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function IngredientListFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Dish Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" id: new FormControl(null, Validators.required), time: new FormControl(null, Validators.required), difficulty:new FormControl(null, Validators.required), rating: new FormControl(null, Validators.required), title:new FormControl('', Validators.required), ingredientLists: new FormArray([new FormControl(null, Validators.required)]) \");\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵtemplate(7, IngredientListFormComponent_div_7_Template, 10, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function IngredientListFormComponent_Template_button_click_8_listener() {\n          return ctx.addIngredientList();\n        });\n        i0.ɵɵtext(9, \"Add Ingredient\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Save Dish\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.dishForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ingredientLists.controls);\n      }\n    },\n    dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName, i2.FormArrayName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormArray","FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","IngredientListFormComponent_div_7_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","removeIngredientList","ɵɵadvance","ɵɵproperty","IngredientListFormComponent","constructor","ingredientListService","fb","dishService","dishForm","id","required","time","difficulty","rating","title","ingredientLists","ngOnInit","get","_","ɵɵdirectiveInject","i1","IngredientListService","i2","FormBuilder","i3","DishService","_2","selectors","decls","vars","consts","template","IngredientListFormComponent_Template","rf","ctx","IngredientListFormComponent_Template_form_ngSubmit_0_listener","onSubmit","ɵɵtemplate","IngredientListFormComponent_div_7_Template","IngredientListFormComponent_Template_button_click_8_listener","addIngredientList","controls"],"sources":["C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-list-form\\ingredient-list-form.component.ts","C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-list-form\\ingredient-list-form.component.html"],"sourcesContent":["import { DishService } from './../../service/dish.service';\nimport { Dish } from './../../models/dish';\nimport { IngredientListService } from './../../service/ingredient-list.service';\nimport { Component } from '@angular/core';\nimport { IngredientList } from 'src/app/models/ingredient-list';\nimport { FormArray, FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-ingredient-list-form',\n  templateUrl: './ingredient-list-form.component.html',\n  styleUrls: ['./ingredient-list-form.component.css']\n})\nexport class IngredientListFormComponent {\n\n// dishForm = FormGroup;\ndishForm = new FormGroup({\n  id: new FormControl(null, Validators.required),\n    time: new FormControl(null, Validators.required),\n    difficulty:new FormControl(null, Validators.required),\n    rating: new FormControl(null, Validators.required),\n    title:new FormControl('', Validators.required),\n    ingredientLists: new FormArray([new FormControl(null, Validators.required)])\n});\n  constructor( private ingredientListService: IngredientListService, private fb: FormBuilder, private dishService:DishService) {\n    // this.dishForm = this.fb.group({\n    //   title: [''],\n    //   ingredientLists: this.fb.array([])\n    // });\n  }\n  ngOnInit(): void {}\n  get ingredientLists(): FormArray {\n    return this.dishForm.get('ingredientLists') as FormArray;\n  }\n\n}\n","<!-- ingredient-form.component.html -->\n<form [formGroup]=\"dishForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"title\">Dish Title</label>\n      <input id=\"title\" formControlName=\"title\" />\n    </div>\n    id: new FormControl(null, Validators.required),\n    time: new FormControl(null, Validators.required),\n    difficulty:new FormControl(null, Validators.required),\n    rating: new FormControl(null, Validators.required),\n    title:new FormControl('', Validators.required),\n    ingredientLists: new FormArray([new FormControl(null, Validators.required)])\n    <div formArrayName=\"ingredientLists\">\n      <div *ngFor=\"let ingredientList of ingredientLists.controls; let i = index\">\n        <div [formGroupName]=\"i\">\n          <label for=\"ingredientName\">Ingredient Name</label>\n          <input id=\"ingredientName\" formControlName=\"ingredientName\" />\n  \n          <label for=\"quantity\">Quantity</label>\n          <input id=\"quantity\" formControlName=\"quantity\" type=\"number\" />\n  \n          <button type=\"button\" (click)=\"removeIngredientList(i)\">Remove Ingredient</button>\n        </div>\n      </div>\n    </div>\n  \n    <button type=\"button\" (click)=\"addIngredientList()\">Add Ingredient</button>\n    <button type=\"submit\">Save Dish</button>\n  </form>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}