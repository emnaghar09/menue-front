{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../service/ingredient-list.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./../../service/dish.service\";\nexport class IngredientListFormComponent {\n  constructor(ingredientListService, fb, dishService) {\n    this.ingredientListService = ingredientListService;\n    this.fb = fb;\n    this.dishService = dishService;\n    // dishForm = FormGroup;\n    this.dishForm = new FormGroup({\n      name: new FormControl('', Validators.required)\n    });\n    // this.dishForm = this.fb.group({\n    //   title: [''],\n    //   ingredientLists: this.fb.array([])\n    // });\n  }\n\n  ngOnInit() {}\n  get ingredientLists() {\n    return this.dishForm.get('ingredientLists');\n  }\n  static #_ = this.ɵfac = function IngredientListFormComponent_Factory(t) {\n    return new (t || IngredientListFormComponent)(i0.ɵɵdirectiveInject(i1.IngredientListService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.DishService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IngredientListFormComponent,\n    selectors: [[\"app-ingredient-list-form\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[3, \"formGroup\"]],\n    template: function IngredientListFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"ingredient-list-form works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"form\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.ingredientListForm);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","IngredientListFormComponent","constructor","ingredientListService","fb","dishService","dishForm","name","Validators","required","ngOnInit","ingredientLists","get","_","i0","ɵɵdirectiveInject","i1","IngredientListService","i2","FormBuilder","i3","DishService","_2","selectors","decls","vars","consts","template","IngredientListFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ingredientListForm"],"sources":["C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-list-form\\ingredient-list-form.component.ts","C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-list-form\\ingredient-list-form.component.html"],"sourcesContent":["import { DishService } from './../../service/dish.service';\nimport { Dish } from './../../models/dish';\nimport { IngredientListService } from './../../service/ingredient-list.service';\nimport { Component } from '@angular/core';\nimport { IngredientList } from 'src/app/models/ingredient-list';\nimport { FormArray, FormGroup, FormBuilder, FormControl } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-ingredient-list-form',\n  templateUrl: './ingredient-list-form.component.html',\n  styleUrls: ['./ingredient-list-form.component.css']\n})\nexport class IngredientListFormComponent {\n\n// dishForm = FormGroup;\ndishForm = new FormGroup({\n  name: new FormControl('', Validators.required),\n});\n  constructor( private ingredientListService: IngredientListService, private fb: FormBuilder, private dishService:DishService) {\n    // this.dishForm = this.fb.group({\n    //   title: [''],\n    //   ingredientLists: this.fb.array([])\n    // });\n  }\n  ngOnInit(): void {}\n  get ingredientLists(): FormArray {\n    return this.dishForm.get('ingredientLists') as FormArray;\n  }\n\n}\n","<p>ingredient-list-form works!</p>\n\n<form [formGroup]=\"ingredientListForm\">\n    <!-- Form controls go here -->\n  </form>\n"],"mappings":"AAKA,SAAoBA,SAAS,EAAeC,WAAW,QAAQ,gBAAgB;;;;;AAS/E,OAAM,MAAOC,2BAA2B;EAMtCC,YAAqBC,qBAA4C,EAAUC,EAAe,EAAUC,WAAuB;IAAtG,KAAAF,qBAAqB,GAArBA,qBAAqB;IAAiC,KAAAC,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IAJjH;IACA,KAAAC,QAAQ,GAAG,IAAIP,SAAS,CAAC;MACvBQ,IAAI,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEQ,UAAU,CAACC,QAAQ;KAC9C,CAAC;IAEE;IACA;IACA;IACA;EACF;;EACAC,QAAQA,CAAA,GAAU;EAClB,IAAIC,eAAeA,CAAA;IACjB,OAAO,IAAI,CAACL,QAAQ,CAACM,GAAG,CAAC,iBAAiB,CAAc;EAC1D;EAAC,QAAAC,CAAA,G;qBAfUZ,2BAA2B,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA3BrB,2BAA2B;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCdxCf,EAAA,CAAAiB,cAAA,QAAG;QAAAjB,EAAA,CAAAkB,MAAA,kCAA2B;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;QAElCnB,EAAA,CAAAoB,SAAA,cAES;;;QAFHpB,EAAA,CAAAqB,SAAA,GAAgC;QAAhCrB,EAAA,CAAAsB,UAAA,cAAAN,GAAA,CAAAO,kBAAA,CAAgC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}