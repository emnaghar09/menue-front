{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/ingredient.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class IngredientFormComponent {\n  constructor(ingredientService, router) {\n    this.ingredientService = ingredientService;\n    this.router = router;\n    this.ingredientsForm = new FormGroup({\n      name: new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {\n    if (this.ingredientsForm.valid) {\n      const ingredient = {\n        name: this.ingredientsForm.value.name\n      };\n      this.ingredientService.addIngredient(ingredient).subscribe(() => {\n        this.router.navigateByUrl('cooptation-list');\n        this.alertService.success('Cooptation soumise');\n      });\n    }\n  }\n  goToIngredients() {\n    this.router.navigate([\"ingredient\"]);\n    console.log('aaa');\n  }\n  static #_ = this.ɵfac = function IngredientFormComponent_Factory(t) {\n    return new (t || IngredientFormComponent)(i0.ɵɵdirectiveInject(i1.IngredientService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IngredientFormComponent,\n    selectors: [[\"app-ingredient-form\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"first-name\"], [\"id\", \"first-name\", \"type\", \"text\", \"formControlName\", \"name\"], [\"type\", \"submit\", \"click\", \"goToIngredients()\", 3, \"disabled\"]],\n    template: function IngredientFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function IngredientFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Ingredient: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵtext(5, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.ingredientsForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.ingredientsForm.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Validators","IngredientFormComponent","constructor","ingredientService","router","ingredientsForm","name","required","onSubmit","valid","ingredient","value","addIngredient","subscribe","navigateByUrl","alertService","success","goToIngredients","navigate","console","log","_","i0","ɵɵdirectiveInject","i1","IngredientService","i2","Router","_2","selectors","decls","vars","consts","template","IngredientFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","IngredientFormComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-form\\ingredient-form.component.ts","C:\\Talan php\\recipie exercice\\recipieFront\\src\\app\\component\\ingredient-form\\ingredient-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IngredientService } from 'src/app/service/ingredient.service';\nimport { Ingredient } from 'src/app/models/ingredient';\n\n@Component({\n  selector: 'app-ingredient-form',\n  templateUrl: './ingredient-form.component.html',\n  styleUrls: ['./ingredient-form.component.css'],\n})\n\nexport class IngredientFormComponent {\ningredientsForm = new FormGroup({\n  name: new FormControl('', Validators.required),\n});\n\nconstructor (private ingredientService: IngredientService, private router: Router) {\n  \n}\n\nonSubmit() {\n  if (this.ingredientsForm.valid) {\n    const ingredient: Ingredient = {\n      name: this.ingredientsForm.value.name!\n    };\n    this.ingredientService.addIngredient(ingredient).subscribe(() => {\n      this.router.navigateByUrl('cooptation-list');\n      this.alertService.success('Cooptation soumise');\n    });\n}\n}\n\ngoToIngredients(){\n  this.router.navigate([\"ingredient\"])\n  console.log('aaa')\n}\n}\n","<form [formGroup]=\"ingredientsForm\" (ngSubmit)=\"onSubmit()\">\n\n    <label for=\"first-name\">Ingredient: </label>\n    <input id=\"first-name\" type=\"text\" formControlName=\"name\">\n    <button type=\"submit\" [disabled]=\"!ingredientsForm.valid\" click=\"goToIngredients()\">Submit</button>\n</form>"],"mappings":"AACA,SAAQA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAWlE,OAAM,MAAOC,uBAAuB;EAKpCC,YAAqBC,iBAAoC,EAAUC,MAAc;IAA5D,KAAAD,iBAAiB,GAAjBA,iBAAiB;IAA6B,KAAAC,MAAM,GAANA,MAAM;IAJzE,KAAAC,eAAe,GAAG,IAAIP,SAAS,CAAC;MAC9BQ,IAAI,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACO,QAAQ;KAC9C,CAAC;EAIF;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACH,eAAe,CAACI,KAAK,EAAE;MAC9B,MAAMC,UAAU,GAAe;QAC7BJ,IAAI,EAAE,IAAI,CAACD,eAAe,CAACM,KAAK,CAACL;OAClC;MACD,IAAI,CAACH,iBAAiB,CAACS,aAAa,CAACF,UAAU,CAAC,CAACG,SAAS,CAAC,MAAK;QAC9D,IAAI,CAACT,MAAM,CAACU,aAAa,CAAC,iBAAiB,CAAC;QAC5C,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;MACjD,CAAC,CAAC;;EAEN;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EACpB;EAAC,QAAAC,CAAA,G;qBAxBYpB,uBAAuB,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAvB3B,uBAAuB;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZpCb,EAAA,CAAAe,cAAA,cAA4D;QAAxBf,EAAA,CAAAgB,UAAA,sBAAAC,0DAAA;UAAA,OAAYH,GAAA,CAAA5B,QAAA,EAAU;QAAA,EAAC;QAEvDc,EAAA,CAAAe,cAAA,eAAwB;QAAAf,EAAA,CAAAkB,MAAA,mBAAY;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QAC5CnB,EAAA,CAAAoB,SAAA,eAA0D;QAC1DpB,EAAA,CAAAe,cAAA,gBAAoF;QAAAf,EAAA,CAAAkB,MAAA,aAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAJjGnB,EAAA,CAAAqB,UAAA,cAAAP,GAAA,CAAA/B,eAAA,CAA6B;QAITiB,EAAA,CAAAsB,SAAA,GAAmC;QAAnCtB,EAAA,CAAAqB,UAAA,cAAAP,GAAA,CAAA/B,eAAA,CAAAI,KAAA,CAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}